4、选装cnpm

4.1、说明：因为npm安装插件是从国外服务器下载，受网络影响大，可能出现异常，如果npm的服务器在中国就好了，所以我们乐于分享的淘宝团队干了这事。！来自官网：“这是一个完整 npmjs.org 镜像，你可以用此代替官方版本(只读)，同步频率目前为 10分钟 一次以保证尽量与官方服务同步。”；

4.2、官方网址：http://npm.taobao.org；

4.3、安装：命令提示符执行npm install cnpm -g --registry=https://registry.npm.taobao.org；  注意：安装完后最好查看其版本号cnpm -v或关闭命令提示符重新打开，安装完直接使用有可能会出现错误；

注：cnpm跟npm用法完全一致，只是在执行命令时将npm改为cnpm（以下操作将以cnpm代替npm）。



路由 ui.route
ui.route：http://runjs.cn/code/74vszpdz
路由参数：http://runjs.cn/code/zey9cp7w
重要指令和服务：ui-sref、$state
路由：
config():配置 
$stateProvider:配置状态，也就是路由
$stateProvider.state():有两个参数，第一个是路由的id，然后是一个对象：对象里包括路由的路径、templateUrl和对应的controller
$urlRouterProvider.otherwise("路径"),默认的查找路径
ui-view：同ng-view，当加载一个页面时，将页面插入到带有ui-view的标签里。

实现页面的跳转：
指令的方式： ui-sref=“mian”   传递参数 ui-sref=“mian({id：1234})”
服务可以理解为一段公用的代码，公用的函数
脚本的形式：  $state.go(“main”,{id:1234},{location:'replace'})
                        (id,需要对应的参数，选项参数)
location:'replace'：跳转时消除当前路径
参数：
$state.params:获取定义的参数   或者直接调用$stateParams服务
$state.params.id  <==>   $stateParams.id



指令：
向模块注册一个新的指令，使用directive（）方法。
restrict值可以是以下几种：
E--作为元素名使用（Element）      A--作为属性使用（attribute）
C--作为类名使用（Class）        M--作为注释使用（moment）
template："<p class='well'></p>"         内容
templateUrl: 'view/template/head.html'   路径
link: 链接函数，链接到原标签中
scope属性:指定变量名，把对应的数据传给指令，指令相当于控制器的子元素。
app.directive('myAlert',function(){
  return{
     restrict:'A',       //指令作为属性使用
     replace:true,       //是否替换原便签
     templateUrl:' view/template/head.html'，       //模板
     scope：{            //接口,暴露一些接口给控制器
        data:"=" ,
        bb: "@",        //代表可以直接接收字符串
        cc:"&"
     }
     link: function($scope,element,attr){           //链接函数,行为
     	$scope.name = cache.get('name');
     }
  }
})


window.history 是html5新增的API，window.history.back(）方法实现浏览器的返回。
ng-show:控制元素是否显示
ng-if:控制元素是否存在


$scope的方法：
$scope.$broadcast():向下广播一个事件
$scope.emit():向上广播一个事件
$scope.on():接收广播事件


$state.params是一个json对象，包含一些参数。
$q是为了实现promise和延迟加载对象的服务。
$q.defer()方法创建一个defer对象，返回一个promise对象。将一个异步的操作，变成同步的写法。
$q.all()方法：在两个异步的操作执行完成之后，再进行的另外的操作。
$rootScope:初始化执行


$http的post、delete、put方法跟get不同
$http['post'/'delete'/'put'](url，{
  //数据对象
},{
  //配置对象
});




